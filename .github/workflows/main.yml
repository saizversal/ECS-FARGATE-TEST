name: Deploy to ECS Fargate

on:
  workflow_dispatch:
    inputs:
      Runner:
        type: choice
        description: GitHub runner
        options:
          - ubuntu-latest
          - self-hosted

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: ecs-fargate
  ECR_REPOSITORY: ecs-test
  IMAGE_TAG: latest
  ACCOUNT_ID: 890742570780
  CONTAINER_PORT: 3000
  STACK_NAME: ecs-test-stack
  TEMPLATE_FILE: template.yaml
  ECS_CLUSTER_NAME: ecs-fargate-cluster
  ECS_CONTAINER_NAME: ecs-fargate-container
  ECR_IMAGE_URI: ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ${{ inputs.Runner }}
    defaults:
      run:
        working-directory: ./  # no subdirectories
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        run: |
          echo "Building and pushing Docker image..."
          docker build -t $ECR_IMAGE_URI .
          docker push $ECR_IMAGE_URI
        env:
          ECR_IMAGE_URI: ${{ env.ECR_IMAGE_URI }}

      - name: Deploy CloudFormation stack using shell script
        run: ./ecs-fargate.sh
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ACCOUNT_ID: ${{ env.ACCOUNT_ID }}
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          ECS_CLUSTER_NAME: ${{ env.ECS_CLUSTER_NAME }}
          ECS_CONTAINER_NAME: ${{ env.ECS_CONTAINER_NAME }}
          ECR_IMAGE_URI: ${{ env.ECR_IMAGE_URI }}
          CONTAINER_PORT: ${{ env.CONTAINER_PORT }}
          STACK_NAME: ${{ env.STACK_NAME }}
          TEMPLATE_FILE: ${{ env.TEMPLATE_FILE }}
